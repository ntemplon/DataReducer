/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nfa.drs;

import com.nfa.drs.data.DataWrapper;
import java.awt.event.ItemEvent;
import java.util.Collections;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

/**
 *
 * @author Nathan Templon
 */
public class ReductionDetailPanel extends javax.swing.JPanel {

    // Fields
    private final Map<String, Map<Integer, List<DataWrapper>>> detailedResults = new LinkedHashMap<>();
    private final Map<String, Map<Integer, List<DataWrapper>>> detailedResultsView = Collections.unmodifiableMap(this.detailedResults);
    
    
    // Properties
    public Map<String, Map<Integer, List<DataWrapper>>> getDetailedResults() {
        return this.detailedResultsView;
    }
    
    public void setDetailedResults(Map<String, Map<Integer, List<DataWrapper>>> results) {
        this.detailedResults.clear();
        this.detailedResults.putAll(results);
        this.reloadDetailedResults();
    }
    
    
    // Initialization
    /**
     * Creates new form ReductionDetailPanel
     */
    public ReductionDetailPanel() {
        initComponents();
        
        this.runComboBox.addItemListener(this::runComboBoxItemEvent);
        this.testPointComboBox.addItemListener(this::testPointComboBoxItemEvent);
        
        this.runComboBox.removeAllItems();
        this.testPointComboBox.removeAllItems();
    }
    
    
    // Private Methods
    private void reloadDetailedResults() {
        this.runComboBox.removeAllItems();
        this.testPointComboBox.removeAllItems();
        this.dataViewer.clear();
        
        this.detailedResults.keySet().stream()
                .forEach((String runName) -> this.runComboBox.addItem(runName));
        if (this.runComboBox.getItemCount() > 0) {
            this.runComboBox.setSelectedIndex(0);
        }
    }
    
    private void runComboBoxItemEvent(ItemEvent e) {
        if (e == null || e.getStateChange() == ItemEvent.DESELECTED) {
            return;
        }
        
        Object runSelection = this.runComboBox.getSelectedItem();
        if (runSelection == null) {
            return;
        }
        
        String runName = runSelection.toString();
        
        this.testPointComboBox.removeAllItems();
        this.detailedResults.get(runName).keySet().stream()
                .forEach((Integer testPoint) -> this.testPointComboBox.addItem(testPoint));
        if (this.testPointComboBox.getItemCount() > 0) {
            this.testPointComboBox.setSelectedIndex(0);
        }
    }
    
    private void testPointComboBoxItemEvent(ItemEvent e) {
        if (e == null || e.getStateChange() == ItemEvent.DESELECTED) {
            return;
        }
        
        Object runSelection = this.runComboBox.getSelectedItem();
        if (runSelection == null) {
            return;
        }
        
        Object testPointSelection = this.testPointComboBox.getSelectedItem();
        if (testPointSelection == null || !(testPointSelection instanceof Integer)) {
            return;
        }
        
        String runName = runSelection.toString();
        int testPoint = (Integer) testPointSelection;
        
        this.dataViewer.clear();
        this.detailedResults.get(runName).get(testPoint).stream()
                .forEach((DataWrapper wrapper) -> this.dataViewer.addData(wrapper.getName(), wrapper.getData()));
    }
    
    
    // Generated Stuff
    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        runLabel = new javax.swing.JLabel();
        runComboBox = new javax.swing.JComboBox();
        testPointLabel = new javax.swing.JLabel();
        testPointComboBox = new javax.swing.JComboBox();
        dataViewerScrollPane = new javax.swing.JScrollPane();
        dataViewer = new com.nfa.drs.data.DataContainerViewer();

        setLayout(new java.awt.GridBagLayout());

        runLabel.setText("Run");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        add(runLabel, gridBagConstraints);

        runComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        runComboBox.setMinimumSize(new java.awt.Dimension(200, 24));
        runComboBox.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(runComboBox, gridBagConstraints);

        testPointLabel.setText("Test Point");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(testPointLabel, gridBagConstraints);

        testPointComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        testPointComboBox.setMinimumSize(new java.awt.Dimension(200, 24));
        testPointComboBox.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        add(testPointComboBox, gridBagConstraints);

        dataViewerScrollPane.setViewportView(dataViewer);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        add(dataViewerScrollPane, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.nfa.drs.data.DataContainerViewer dataViewer;
    private javax.swing.JScrollPane dataViewerScrollPane;
    private javax.swing.JComboBox runComboBox;
    private javax.swing.JLabel runLabel;
    private javax.swing.JComboBox testPointComboBox;
    private javax.swing.JLabel testPointLabel;
    // End of variables declaration//GEN-END:variables
}
