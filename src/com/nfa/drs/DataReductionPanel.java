/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nfa.drs;

import com.jupiter.ganymede.property.Property;
import com.jupiter.ganymede.property.Property.PropertyChangedArgs;
import com.nfa.drs.data.DataFormat;
import com.nfa.drs.data.Run;
import com.nfa.drs.data.StudentWindTunnelFormat;
import com.nfa.drs.data.Test;
import java.awt.event.ActionEvent;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFileChooser;

/**
 *
 * @author Nathan Templon
 */
public class DataReductionPanel extends javax.swing.JPanel {

    // Static Fields
    private static final Map<String, DataFormat> formats = new HashMap<>();
    static {
        DataFormat wsu3by4 = new StudentWindTunnelFormat();
        formats.put(wsu3by4.getName(), wsu3by4);
    }
    
    
    // Fields
    private final Property<Test> test = new Property<>();


    /**
     * Creates new form DataReductionPanel
     */
    public DataReductionPanel() {
        this.initComponents();

        this.formatCombo.removeAllItems();
        formats.keySet().stream()
                .forEach((String name) -> this.formatCombo.addItem(name));
        
        this.thermalBiasRunCombo.removeAllItems();

        this.importButton.addActionListener(this::inputButtonActionPerformed);
        
        this.test.addPropertyChangedListener(this::resetThermalBias);
    }


    // Private Methods
    private void inputButtonActionPerformed(ActionEvent e) {
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        if (chooser.showDialog(this, "Import") == JFileChooser.APPROVE_OPTION) {
            Path dir = chooser.getSelectedFile().toPath();
            if (Files.isDirectory(dir)) {
                DataFormat format = formats.get(this.formatCombo.getSelectedItem().toString());
                this.test.set(format.fromDirectory(dir));
                this.test.get().getRuns().stream()
                        .forEach((Run run) ->
                                run.getDatapoints().stream()
                                .forEach((point) ->
                                        this.dataViewer.addData(run.getName(), point)
                                )
                        );
            }
        }
    }
    
    private void resetThermalBias(PropertyChangedArgs<Test> e) {
        this.thermalBiasRunCombo.removeAllItems();
        this.test.get().getRuns().stream()
                .forEach((Run run) -> this.thermalBiasRunCombo.addItem(run.getName()));
    }

    // Designer  
    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        tabbedPane = new javax.swing.JTabbedPane();
        configPanel = new javax.swing.JPanel();
        inputFormatLabel = new javax.swing.JLabel();
        formatCombo = new javax.swing.JComboBox();
        botGlue = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        modelConstantsLabel = new javax.swing.JLabel();
        modelConstantsPanel1 = new com.nfa.drs.constants.ModelConstantsPanel();
        importPanel = new javax.swing.JPanel();
        dataScrollPane = new javax.swing.JScrollPane();
        dataViewer = new com.nfa.drs.data.DataContainerViewer();
        importButton = new javax.swing.JButton();
        thermalPanel = new javax.swing.JPanel();
        thermalRunLabel = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        thermalBiasRunCombo = new javax.swing.JComboBox();
        reductionPanel = new javax.swing.JPanel();
        dataTab = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        setPreferredSize(new java.awt.Dimension(950, 600));
        setLayout(new java.awt.BorderLayout());

        configPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        configPanel.setLayout(new java.awt.GridBagLayout());

        inputFormatLabel.setText("Data Format");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        configPanel.add(inputFormatLabel, gridBagConstraints);

        formatCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        formatCombo.setPreferredSize(new java.awt.Dimension(275, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        configPanel.add(formatCombo, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 50;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        configPanel.add(botGlue, gridBagConstraints);

        modelConstantsLabel.setText("Model Constants");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        configPanel.add(modelConstantsLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        configPanel.add(modelConstantsPanel1, gridBagConstraints);

        tabbedPane.addTab("Settings", configPanel);

        importPanel.setLayout(new java.awt.GridBagLayout());

        dataViewer.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        dataScrollPane.setViewportView(dataViewer);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        importPanel.add(dataScrollPane, gridBagConstraints);

        importButton.setText("Import Data");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        importPanel.add(importButton, gridBagConstraints);

        tabbedPane.addTab("Raw Data", importPanel);

        thermalPanel.setLayout(new java.awt.GridBagLayout());

        thermalRunLabel.setText("Select Run");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        thermalPanel.add(thermalRunLabel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 100;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        thermalPanel.add(filler1, gridBagConstraints);

        thermalBiasRunCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        thermalBiasRunCombo.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        thermalPanel.add(thermalBiasRunCombo, gridBagConstraints);

        tabbedPane.addTab("Thermal Bias", thermalPanel);

        javax.swing.GroupLayout reductionPanelLayout = new javax.swing.GroupLayout(reductionPanel);
        reductionPanel.setLayout(reductionPanelLayout);
        reductionPanelLayout.setHorizontalGroup(
            reductionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 935, Short.MAX_VALUE)
        );
        reductionPanelLayout.setVerticalGroup(
            reductionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 563, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Flow Corrections", reductionPanel);

        javax.swing.GroupLayout dataTabLayout = new javax.swing.GroupLayout(dataTab);
        dataTab.setLayout(dataTabLayout);
        dataTabLayout.setHorizontalGroup(
            dataTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        dataTabLayout.setVerticalGroup(
            dataTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        tabbedPane.addTab("Reduced Data", dataTab);

        add(tabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler botGlue;
    private javax.swing.JPanel configPanel;
    private javax.swing.JScrollPane dataScrollPane;
    private javax.swing.JPanel dataTab;
    private com.nfa.drs.data.DataContainerViewer dataViewer;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JComboBox formatCombo;
    private javax.swing.JButton importButton;
    private javax.swing.JPanel importPanel;
    private javax.swing.JLabel inputFormatLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel modelConstantsLabel;
    private com.nfa.drs.constants.ModelConstantsPanel modelConstantsPanel1;
    private javax.swing.JPanel reductionPanel;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JComboBox thermalBiasRunCombo;
    private javax.swing.JPanel thermalPanel;
    private javax.swing.JLabel thermalRunLabel;
    // End of variables declaration//GEN-END:variables
}
